// <auto-generated />
using System;
using ISysLab2023.Backend.WebApi.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ISysLab2023.Backend.WebApi.Migrations
{
    [DbContext(typeof(DbContextWebApi))]
    partial class DbContextWebApiModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ISysLab2023.Backend.Lib.Domain.Organization.Department", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SubdivisionCode")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("varchar(63)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("varchar(63)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ISysLab2023.Backend.Lib.Domain.Person.BasePerson", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly?>("BirthDay")
                        .HasColumnType("date");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(63)
                        .HasColumnType("varchar(63)");

                    b.Property<string>("Name")
                        .HasMaxLength(63)
                        .HasColumnType("varchar(63)");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(63)
                        .HasColumnType("varchar(63)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Surname")
                        .HasMaxLength(63)
                        .HasColumnType("varchar(63)");

                    b.HasKey("Id");

                    b.ToTable("BasePerson");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BasePerson");
                });

            modelBuilder.Entity("ISysLab2023.Backend.Lib.Domain.SupportClasses.EmployeeProjects", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdEmployee")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdProject")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Key");

                    b.HasIndex("IdEmployee");

                    b.HasIndex("IdProject");

                    b.ToTable("EmployeeProjects");
                });

            modelBuilder.Entity("ISysLab2023.Backend.Lib.Domain.WorkingProjects.Project", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("varchar(63)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("varchar(63)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ISysLab2023.Backend.Lib.Domain.Person.Employee", b =>
                {
                    b.HasBaseType("ISysLab2023.Backend.Lib.Domain.Person.BasePerson");

                    b.Property<int>("EmployeeCode")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.Property<string>("HeadManagerId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdDepartment")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdHeadManager")
                        .HasColumnType("longtext");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("varchar(63)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasIndex("EmployeeCode")
                        .IsUnique();

                    b.HasIndex("HeadManagerId");

                    b.HasIndex("IdDepartment");

                    b.HasDiscriminator().HasValue("Employee");
                });

            modelBuilder.Entity("ISysLab2023.Backend.Lib.Domain.SupportClasses.EmployeeProjects", b =>
                {
                    b.HasOne("ISysLab2023.Backend.Lib.Domain.Person.Employee", "Employee")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ISysLab2023.Backend.Lib.Domain.WorkingProjects.Project", "Project")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("IdProject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ISysLab2023.Backend.Lib.Domain.Person.Employee", b =>
                {
                    b.HasOne("ISysLab2023.Backend.Lib.Domain.Person.Employee", "HeadManager")
                        .WithMany()
                        .HasForeignKey("HeadManagerId");

                    b.HasOne("ISysLab2023.Backend.Lib.Domain.Organization.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("IdDepartment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("HeadManager");
                });

            modelBuilder.Entity("ISysLab2023.Backend.Lib.Domain.Organization.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ISysLab2023.Backend.Lib.Domain.WorkingProjects.Project", b =>
                {
                    b.Navigation("EmployeeProjects");
                });

            modelBuilder.Entity("ISysLab2023.Backend.Lib.Domain.Person.Employee", b =>
                {
                    b.Navigation("EmployeeProjects");
                });
#pragma warning restore 612, 618
        }
    }
}
